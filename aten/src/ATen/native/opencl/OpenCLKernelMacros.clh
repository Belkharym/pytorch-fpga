#ifdef DOUBLE_PRECISION
    #ifdef cl_khr_fp64
    #pragma OPENCL EXTENSION cl_khr_fp64 : enable
    #define DEF_IF_DOUBLE(_) _
    #elif defined(cl_amd_fp64)
    #pragma OPENCL EXTENSION cl_amd_fp64 : enable
    #define DEF_IF_DOUBLE(_) _
    #else
    #define DEF_IF_DOUBLE(_)
    #endif
#else
#define DEF_IF_DOUBLE(_)
#endif
#ifdef HALF_PRECISION
    #ifdef cl_khr_fp16
    #pragma OPENCL EXTENSION cl_khr_fp16 : enable
    #define DEF_IF_HALF(_) _
    #elif defined(cl_khr_fp16)
    #pragma OPENCL EXTENSION cl_amd_fp16 : enable
    #define DEF_IF_HALF(_) _
    #else
    #define DEF_IF_HALF(_)
    #endif
#else
#define DEF_IF_HALF(_)
#endif
#ifndef OPENCL_KERNEL_MACROS_CLH
#define OPENCL_KERNEL_MACROS_CLH
/// Macro definitions

#define DECLARE_FOR_ALL_SUBTYPES_EXCEPT_1(type, DECLARE_MACRO_) \
    DECLARE_MACRO_(type##2) \
    DECLARE_MACRO_(type##3) \
    DECLARE_MACRO_(type##4) \
    DECLARE_MACRO_(type##8) \
    DECLARE_MACRO_(type##16)

#define DECLARE_FOR_ALL_SUBTYPES(type, DECLARE_MACRO_) \
    DECLARE_MACRO_(type) \
    DECLARE_MACRO_(type##2) \
    DECLARE_MACRO_(type##3) \
    DECLARE_MACRO_(type##4) \
    DECLARE_MACRO_(type##8) \
    DECLARE_MACRO_(type##16)

#define DECLARE_FOR_ALL_SUBTYPES2_EXCEPT_1(type, type2, DECLARE_MACRO_) \
    DECLARE_MACRO_(type##2, type2##2) \
    DECLARE_MACRO_(type##3, type2##3) \
    DECLARE_MACRO_(type##4, type2##4) \
    DECLARE_MACRO_(type##8, type2##8) \
    DECLARE_MACRO_(type##16, type2##16)

#define DECLARE_FOR_ALL_SUBTYPES2(type, type2, DECLARE_MACRO_) \
    DECLARE_MACRO_(type, type2) \
    DECLARE_MACRO_(type##2, type2##2) \
    DECLARE_MACRO_(type##3, type2##3) \
    DECLARE_MACRO_(type##4, type2##4) \
    DECLARE_MACRO_(type##8, type2##8) \
    DECLARE_MACRO_(type##16, type2##16)

#define DEFINE_KERNEL_FOR_FLOATS(KERNEL_MACRO_) \
KERNEL_MACRO_(f, float)    \
DEF_IF_DOUBLE(KERNEL_MACRO_, d, double)

#define DEFINE_KERNEL_FOR_INTS(KERNEL_MACRO_) \
KERNEL_MACRO_(c, char)     \
KERNEL_MACRO_(s, short)    \
KERNEL_MACRO_(i, int)      \
KERNEL_MACRO_(l, long)

#define DEFINE_KERNEL_FOR_ALL_TYPES(KERNEL_MACRO_) \
DEFINE_KERNEL_FOR_INTS(KERNEL_MACRO_) \
DEFINE_KERNEL_FOR_FLOATS(KERNEL_MACRO_)

#endif // !OPENCL_KERNEL_MACROS_CLH